#!/usr/bin/env oh

define strict true

public read-car: method: car: $self::read

define counter: method n {
    while true {
        write: set n: add n 1
    }
}

define filter: method base {
    while true {
	define n: read-car
        if (mod n base): write n
    }
}

define prime-numbers: channel

counter 2 |+ block {
    define in $stdin

    while true {
        define prime: in::read-car
        write prime

        define out: channel
        spawn: filter prime <in >out

        set in out
    }
} > prime-numbers &

define count: integer 250
printf "The first %d prime numbers" count

while count {
    write: read-car
    set count: sub count 1
} <prime-numbers

